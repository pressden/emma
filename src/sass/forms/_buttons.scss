$button-selectors: $button-selectors-admin !default;

@if $admin-stylesheet == false {
	$button-selectors: $button-selectors-theme + ", " + $button-selectors-admin;
}

#{$button-selectors} {
	@include background-color( $button-background-color );
	display: inline-block;
	padding: $button-padding;
	border: $button-border var(--bg-color);
	border-radius: $button-border-radius;

	&:visited {
		color: var(--color); //needed to override styles from Gutenberg stylesheet on :active, :focus, :hover, and :visited
	}

	&:active, &:focus {
		outline: 0;
		box-shadow: 0 0 0 3px var(--bg-color-contrast-md);
	}

	&:hover,
	&:active,
	&:focus {
		background-color: var(--bg-color-contrast-sm);
		border-color: var(--bg-color-contrast-sm);
		text-decoration: none;
		color: var(--color); //needed to override styles from Gutenberg stylesheet on :active, :focus, :hover, and :visited
	}

	&:disabled, &.disabled:not( :disabled ), &.loading {
		filter: $button-disabled-filter-effect;
		cursor: not-allowed;

		&:active, &:focus {
			box-shadow: none;
		}
	}

	&.loading {
		color: transparent !important;

		&::before {
			content: "\f463";
			animation: loading-spin 1s infinite;
			animation-timing-function: linear;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate( -50%, -50% );
			color: var(--color);
			font-family: 'dashicons';
			font-size: $base-unit * 1.5;
		}

		@keyframes loading-spin {
			0% {
				 transform: translate( -50%, -50% ) rotate( 0deg );
			}
			100% {
				 transform: translate( -50%, -50% ) rotate( 360deg );
			}
		}
	}
}

.is-style-outline > .wp-block-button__link {
	padding: $button-padding;
	border-color: currentColor;
	background-color: transparent !important;

	&:hover {
		color: currentColor;
		text-decoration: underline;
	}
	&:active, &:focus {
		box-shadow: 0 0 0 3px var(--color-contrast-md);
	}
}
